,title_size = 16,legend_title = "Group",legend_position = "right")
message("\n VhgIdenFacetedScatterPlot for Gatherer.\n")
# - faceted scatter plot identity vs e values faceted by viral group
facetedscatterplot <- VhgIdenFacetedScatterPlot(file = vg_file,groupby = "ViralRefSeq_taxonomy",conlen_bubble_plot = TRUE,title =
paste0(sra_name," - ",virustype,
": Faceted scatterplot of viral reference e-values and identity")
,title_size = 16,wrap_ncol = 3)
message("\n VhgBoxplot E-Value for Gatherer.\n")
# - boxplot for e values
box_evalue <- VhgBoxplot(file = vg_file,x_column  = "ViralRefSeq_taxonomy",title =
paste0(sra_name," - ",virustype,
": Boxplot of viral reference e-values for each group")
,title_size = 16, y_column = "ViralRefSeq_E",subtitle_size = 10,facet_ncol = facet_column)
message("\n VhgBoxplot Identity for Gatherer.\n")
# - boxplot for identity
iden_boxp <- VhgBoxplot(file = vg_file,x_column  = "ViralRefSeq_taxonomy",title =
paste0(sra_name," - ",virustype,
": Boxplot of viral reference identity for each group")
,title_size = 16, y_column = "ViralRefSeq_ident",facet_ncol = facet_column)
violin_contiglen <- VgConLenViolin(vg_file,title =
paste0(sra_name," - ",virustype,
": Violinplot of contig length for each group")
,title_size = 16,facet_ncol = facet_column)
# --- Generate tables --- #
if (!dir.exists(path)) {
dir.create(path, recursive = TRUE)
}
message("\n  Generating Tables for Hunter.\n")
if(!is.null(vg_file) ){
message("\n  VhgRunsTable for Gatherer.\n")
# - table of viral groups detected - in which data set were they detected?
run_table <- VhgRunsTable(vg_file,groupby  = "ViralRefSeq_taxonomy",
title = paste0(sra_name," - ",virustype,
": Table of viral groups detected across query sequences"),
col_everyrow = TRUE,column_colour = "white",cell_colour = "white",title_colour ="black",
title_weight = "normal",title_size = 20)
ExportVirusGt(gtable=run_table,filename="vg_runtable.docx",path = path)
}else{
message("\n  Skipping VhgRunsTable for Gatherer ( 0 obs.).\n")
}
if(!is.null(box_evalue$summary_stats)){
message("\n  VhgTabularRasa for e-value sum stats for Hunter.\n")
evalues <- VhgTabularRasa(box_evalue$summary_stats,
col_everyrow = TRUE,column_colour = "white",cell_colour = "white",title_colour ="black",
title_weight = "normal",title_size = 20,title =
paste0(sra_name," - ",virustype,": E-values for each group"),
names_ = c("group","median","Q1","Q3","mean","sd","min","max"))
ExportVirusGt(gtable=evalues,filename="vg_evaluestable.docx",path = path)
}else{
message("\n  Skipping VhgTabularRasa for e-value sum stats for Hunter ( 0 obs.).\n")
}
if(!is.null(iden_boxp$summary_stats)){
message("\n  VhgTabularRasa for identity sum stats for Hunter.\n")
identity <- VhgTabularRasa(iden_boxp$summary_stats,
col_everyrow = TRUE,column_colour = "white",cell_colour = "white",title_colour ="black",
title_weight = "normal",title_size = 20,title =
paste0(sra_name," - ",virustype,": Identity [%] for each group"),
names_ = c("group","median","Q1","Q3","mean","sd","min","max"))
ExportVirusGt(gtable=identity,filename="vg_identitytable.docx",path = path)
}else{
message("\n  Skipping VhgTabularRasa for identity sum stats for Hunter ( 0 obs.).\n")
}
if(!is.null(violin_contiglen$contiglen_stats)){
message("\n  VhgTabularRasa for contig length sum stats for Hunter.\n")
contig_len <- VhgTabularRasa(violin_contiglen$contiglen_stats,
col_everyrow = TRUE,column_colour = "white",cell_colour = "white",title_colour ="black",
title_weight = "normal",title_size = 20,title =
paste0(sra_name," - ",virustype,": Contig Length [nt] for each group"),
names_ = c("group","median","Q1","Q3","mean","sd","min","max"))
ExportVirusGt(gtable=contig_len,filename="vg_contig_lentable.docx",path = path)
}else{
message("\n  Skipping VhgTabularRasa for contig length sum stats for Hunter ( 0 obs.).\n")
}
# --- export --- #
# Export plots
if (!dir.exists(path)) {
dir.create(path, recursive = TRUE)
}
ExportVirusPlot(plot = srarun_bar$plot,file_name = "gatherer_srarun.png",path=path,export_plotobj = TRUE,
width = 12,height = 10,units = "in")
ExportVirusPlot(plot = violin_contiglen$plot,file_name = "gatherer_violinplot.png",path=path,export_plotobj = TRUE,
width = 12,height = 10,units = "in")
ExportVirusPlot(plot = identityplot$plot,file_name = "gatherer_identityscattereplot.png",path=path,export_plotobj = TRUE,
width = 12,height = 10,units = "in")
ExportVirusPlot(plot = facetedscatterplot$plot,file_name = "gatherer_facetedidentityplot.png",path=path,export_plotobj = TRUE,
width = 12,height = 10,units = "in")
ExportVirusPlot(plot = box_evalue$boxp,file_name = "gatherer_box_eval.png",path=path,export_plotobj = TRUE,
width = 12,height = 10,units = "in")
ExportVirusPlot(plot = iden_boxp$boxp,file_name = "gatherer_box_identity.png",path=path,export_plotobj = TRUE,
width = 12,height = 10,units = "in")
return(list(srarun_bar=srarun_bar,violin_contiglen=violin_contiglen,identityplot=identityplot,
facetedscatterplot=facetedscatterplot,box_evalue=box_evalue,
iden_boxp=iden_boxp,run_table=run_table))
}
# --- Import and parameters --- #
path_to_hunter <-
"data/hittables_taubert/largedna/combined_virushunter.tsv"
path_to_gatherer <- "data/hittables_taubert/largedna/combined_virusgatherer-cap3.tsv"
sra_name <- "Taubert Data combined"
virustype <- "Large Dna viruses (Hunter)"
virustype_gatherer <- "Large Dna viruses (Gatherer)"
hunter_export_path <- "output/TaubertDatacombined/plots/largedna/Hunter"
gatherer_export_path <- "output/TaubertDatacombined/plots/largedna/Gatherer"
facet_column <- NULL
# sra_name <- "FlorianÂ´s Data"
# virustype <- "Large DNA viruses (Hunter)"
# virustype_gatherer <- "Large DNA viruses (Gatherer)"
# hunter_export_path <- "output/Florian/largedna/plots/Hunter"
# gatherer_export_path <- "output/Florian/largedna/plots/Gatherer"
if(path_to_hunter != ""){
vh_file <-
ImportVirusTable(path_to_hunter)
vh_results <- vhPipeline(vh_file,sra_name = sra_name,virustype = virustype,path = hunter_export_path,facet_column=facet_column)
}
if(path_to_gatherer != ""){
vg_file <-
ImportVirusTable(path_to_gatherer)
vg_results <- vgPipeline(vg_file,sra_name = sra_name,virustype = virustype_gatherer,path = gatherer_export_path,facet_column=facet_column)
}
# Only to install the current version of Virusparies. Otherwise comment out
# remove.packages("Virusparies") # remove old version before installing new
# library(remotes)
# remotes::install_github("SergejRuff/Virusparies")
# --- clean glob. env. --- #
rm(list=ls())
# --- load packages --- #
library(Virusparies)
# --- Pipeline for Hunter --- #
vhPipeline <- function(vh_file,sra_name,virustype,path,facet_column=NULL){
message("\n Performing VhgPreprocessTaxa for Hunter.\n")
vh_file <- VhgPreprocessTaxa(vh_file,"Family")
message("\n VhgRunsBarplot for Hunter.\n")
# Run Bar Chart - Number of viral groups detected across query sequences
srarun_bar <- VhgRunsBarplot(file = vh_file,groupby = "ViralRefSeq_taxonomy",
title = paste0(sra_name," - ",virustype,
": Distribution of viral groups detected across query sequences")
,title_size = 12,facet_ncol = facet_column )
message("\n VhSumHitsBarplot for Hunter.\n")
# - sum of hits plot
sumhitbar <- VhSumHitsBarplot(vh_file,groupby = "ViralRefSeq_taxonomy",title =
paste0(sra_name," - ",virustype,": Distribution of hits for each virus group"),title_size = 12,facet_ncol = facet_column)
message("\n VhgIdentityScatterPlot for Hunter.\n")
# - scatter plot e value vs identity
identityplot <-  VhgIdentityScatterPlot(file = vh_file,groupby = "ViralRefSeq_taxonomy",title =
paste0(sra_name," - ",virustype,
": Scatterplot of viral reference e-values and identity")
,title_size = 16,legend_title = "Group")
message("\n VhgIdenFacetedScatterPlot for Hunter.\n")
# - faceted scatter plot identity vs e values faceted by viral group
facetedscatterplot <- VhgIdenFacetedScatterPlot(file = vh_file,groupby = "ViralRefSeq_taxonomy",title =
paste0(sra_name," - ",virustype,
": Faceted scatterplot of viral reference e-values and identity")
,title_size = 16,wrap_ncol = 3)
message("\n  VhgBoxplot E-Value for Hunter.\n")
# - boxplot for e values
box_evalue <- VhgBoxplot(file = vh_file,x_column  = "ViralRefSeq_taxonomy",title =
paste0(sra_name," - ",virustype,
": Boxplot of viral reference e-values for each group")
,title_size = 16, y_column = "ViralRefSeq_E",subtitle_size = 10,facet_ncol = facet_column)
message("\n  VhgBoxplot identity for Hunter.\n")
# - boxplot for identity
iden_boxp <- VhgBoxplot(file = vh_file,x_column  = "ViralRefSeq_taxonomy",title =
paste0(sra_name," - ",virustype,
": Boxplot of viral reference identity for each group")
,title_size = 16, y_column = "ViralRefSeq_ident",facet_ncol =
facet_column)
# --- Generate tables --- #
if (!dir.exists(path)) {
dir.create(path, recursive = TRUE)
}
message("\n  Generating Tables for Hunter.\n")
if(!is.null(vh_file) ){
message("\n  VhgRunsTable for Hunter.\n")
# - table of viral groups detected - in which data set were they detected?
run_table <- VhgRunsTable(vh_file,groupby  = "ViralRefSeq_taxonomy",
title = paste0(sra_name," - ",virustype,
": Table of viral groups detected across query sequences"),
col_everyrow = TRUE,column_colour = "white",cell_colour = "white",title_colour ="black",
title_weight = "normal",title_size = 20)
ExportVirusGt(gtable=run_table,filename="vh_runtable.docx",path = path)
}else{
message("\n  Skipping VhgRunsTable for Hunter ( 0 obs.).\n")
}
if(!is.null(box_evalue$summary_stats)){
message("\n  VhgTabularRasa for e-value sum stats for Hunter.\n")
evalues <- VhgTabularRasa(box_evalue$summary_stats,
col_everyrow = TRUE,column_colour = "white",cell_colour = "white",title_colour ="black",
title_weight = "normal",title_size = 20,title =
paste0(sra_name," - ",virustype,": E-values for each group"),
names_ = c("group","median","Q1","Q3","mean","sd","min","max"))
ExportVirusGt(gtable=evalues,filename="vh_evaluestable.docx",path = path)
}else{
message("\n  Skipping VhgTabularRasa for e-value sum stats for Hunter ( 0 obs.).\n")
}
if(!is.null(iden_boxp$summary_stats)){
message("\n  VhgTabularRasa for identity sum stats for Hunter.\n")
identity <- VhgTabularRasa(iden_boxp$summary_stats,
col_everyrow = TRUE,column_colour = "white",cell_colour = "white",title_colour ="black",
title_weight = "normal",title_size = 20,title =
paste0(sra_name," - ",virustype,": Identity [%] for each group"),
names_ = c("group","median","Q1","Q3","mean","sd","min","max"))
ExportVirusGt(gtable=identity,filename="vh_identitytable.docx",path = path)
}else{
message("\n  Skipping VhgTabularRasa for identity sum stats for Hunter ( 0 obs.).\n")
}
# --- export --- #
# Export plots
ExportVirusPlot(plot = srarun_bar$plot,file_name = "hunter_srarun.png",path=path,export_plotobj = TRUE,
width = 13,height = 10,units = "in")
ExportVirusPlot(plot = sumhitbar$plot,file_name = "hunter_sumhitbar.png",path=path,export_plotobj = TRUE,
width = 12,height = 10,units = "in")
ExportVirusPlot(plot = identityplot$plot,file_name = "hunter_identityscatter.png",path=path,export_plotobj = TRUE,
width = 12,height = 10,units = "in")
ExportVirusPlot(plot = facetedscatterplot$plot,file_name = "hunter_facetedidentityscatter.png",path=path,export_plotobj = TRUE,
width = 12,height = 10,units = "in")
ExportVirusPlot(plot = box_evalue$boxp,file_name = "hunter_boxeval.png",path=path,export_plotobj = TRUE,
width = 12,height = 10,units = "in")
ExportVirusPlot(plot = iden_boxp$boxp,file_name = "hunter_identboxp.png",path=path,export_plotobj = TRUE,
width = 12,height = 10,units = "in")
return(list(srarun_bar=srarun_bar,sumhitbar=sumhitbar,identityplot=identityplot,
facetedscatterplot=facetedscatterplot,box_evalue=box_evalue,
iden_boxp=iden_boxp,run_table=run_table))
}
# --- Pipeline for Gatherer --- #
vgPipeline <- function(vg_file,sra_name,virustype,path,facet_column=NULL){
message("\n Performing VhgPreprocessTaxa for Gatherer.\n")
vg_file <- VhgPreprocessTaxa(vg_file,"Family")
message("\n VhgRunsBarplot for Gatherer.\n")
# Run Bar Chart - Number of viral groups detected across query sequences
srarun_bar <- VhgRunsBarplot(file = vg_file,groupby = "ViralRefSeq_taxonomy",
title = paste0(sra_name," - ",virustype,
": Distribution of viral groups detected across query sequences")
,title_size = 12,facet_ncol = facet_column )
message("\n VhgIdentityScatterPlot for Gatherer.\n")
# - scatter plot e value vs identity
identityplot <-  VhgIdentityScatterPlot(file = vg_file,groupby = "ViralRefSeq_taxonomy",conlen_bubble_plot = TRUE,title =
paste0(sra_name," - ",virustype,
": Scatterplot of viral reference e-values and identity")
,title_size = 16,legend_title = "Group",legend_position = "right")
message("\n VhgIdenFacetedScatterPlot for Gatherer.\n")
# - faceted scatter plot identity vs e values faceted by viral group
facetedscatterplot <- VhgIdenFacetedScatterPlot(file = vg_file,groupby = "ViralRefSeq_taxonomy",conlen_bubble_plot = TRUE,title =
paste0(sra_name," - ",virustype,
": Faceted scatterplot of viral reference e-values and identity")
,title_size = 16,wrap_ncol = 3)
message("\n VhgBoxplot E-Value for Gatherer.\n")
# - boxplot for e values
box_evalue <- VhgBoxplot(file = vg_file,x_column  = "ViralRefSeq_taxonomy",title =
paste0(sra_name," - ",virustype,
": Boxplot of viral reference e-values for each group")
,title_size = 16, y_column = "ViralRefSeq_E",subtitle_size = 10,facet_ncol = facet_column)
message("\n VhgBoxplot Identity for Gatherer.\n")
# - boxplot for identity
iden_boxp <- VhgBoxplot(file = vg_file,x_column  = "ViralRefSeq_taxonomy",title =
paste0(sra_name," - ",virustype,
": Boxplot of viral reference identity for each group")
,title_size = 16, y_column = "ViralRefSeq_ident",facet_ncol = facet_column)
violin_contiglen <- VgConLenViolin(vg_file,title =
paste0(sra_name," - ",virustype,
": Violinplot of contig length for each group")
,title_size = 16,facet_ncol = facet_column)
# --- Generate tables --- #
if (!dir.exists(path)) {
dir.create(path, recursive = TRUE)
}
message("\n  Generating Tables for Hunter.\n")
if(!is.null(vg_file) ){
message("\n  VhgRunsTable for Gatherer.\n")
# - table of viral groups detected - in which data set were they detected?
run_table <- VhgRunsTable(vg_file,groupby  = "ViralRefSeq_taxonomy",
title = paste0(sra_name," - ",virustype,
": Table of viral groups detected across query sequences"),
col_everyrow = TRUE,column_colour = "white",cell_colour = "white",title_colour ="black",
title_weight = "normal",title_size = 20)
ExportVirusGt(gtable=run_table,filename="vg_runtable.docx",path = path)
}else{
message("\n  Skipping VhgRunsTable for Gatherer ( 0 obs.).\n")
}
if(!is.null(box_evalue$summary_stats)){
message("\n  VhgTabularRasa for e-value sum stats for Hunter.\n")
evalues <- VhgTabularRasa(box_evalue$summary_stats,
col_everyrow = TRUE,column_colour = "white",cell_colour = "white",title_colour ="black",
title_weight = "normal",title_size = 20,title =
paste0(sra_name," - ",virustype,": E-values for each group"),
names_ = c("group","median","Q1","Q3","mean","sd","min","max"))
ExportVirusGt(gtable=evalues,filename="vg_evaluestable.docx",path = path)
}else{
message("\n  Skipping VhgTabularRasa for e-value sum stats for Hunter ( 0 obs.).\n")
}
if(!is.null(iden_boxp$summary_stats)){
message("\n  VhgTabularRasa for identity sum stats for Hunter.\n")
identity <- VhgTabularRasa(iden_boxp$summary_stats,
col_everyrow = TRUE,column_colour = "white",cell_colour = "white",title_colour ="black",
title_weight = "normal",title_size = 20,title =
paste0(sra_name," - ",virustype,": Identity [%] for each group"),
names_ = c("group","median","Q1","Q3","mean","sd","min","max"))
ExportVirusGt(gtable=identity,filename="vg_identitytable.docx",path = path)
}else{
message("\n  Skipping VhgTabularRasa for identity sum stats for Hunter ( 0 obs.).\n")
}
if(!is.null(violin_contiglen$contiglen_stats)){
message("\n  VhgTabularRasa for contig length sum stats for Hunter.\n")
contig_len <- VhgTabularRasa(violin_contiglen$contiglen_stats,
col_everyrow = TRUE,column_colour = "white",cell_colour = "white",title_colour ="black",
title_weight = "normal",title_size = 20,title =
paste0(sra_name," - ",virustype,": Contig Length [nt] for each group"),
names_ = c("group","median","Q1","Q3","mean","sd","min","max"))
ExportVirusGt(gtable=contig_len,filename="vg_contig_lentable.docx",path = path)
}else{
message("\n  Skipping VhgTabularRasa for contig length sum stats for Hunter ( 0 obs.).\n")
}
# --- export --- #
# Export plots
if (!dir.exists(path)) {
dir.create(path, recursive = TRUE)
}
ExportVirusPlot(plot = srarun_bar$plot,file_name = "gatherer_srarun.png",path=path,export_plotobj = TRUE,
width = 12,height = 10,units = "in")
ExportVirusPlot(plot = violin_contiglen$plot,file_name = "gatherer_violinplot.png",path=path,export_plotobj = TRUE,
width = 12,height = 10,units = "in")
ExportVirusPlot(plot = identityplot$plot,file_name = "gatherer_identityscattereplot.png",path=path,export_plotobj = TRUE,
width = 12,height = 10,units = "in")
ExportVirusPlot(plot = facetedscatterplot$plot,file_name = "gatherer_facetedidentityplot.png",path=path,export_plotobj = TRUE,
width = 12,height = 10,units = "in")
ExportVirusPlot(plot = box_evalue$boxp,file_name = "gatherer_box_eval.png",path=path,export_plotobj = TRUE,
width = 12,height = 10,units = "in")
ExportVirusPlot(plot = iden_boxp$boxp,file_name = "gatherer_box_identity.png",path=path,export_plotobj = TRUE,
width = 12,height = 10,units = "in")
return(list(srarun_bar=srarun_bar,violin_contiglen=violin_contiglen,identityplot=identityplot,
facetedscatterplot=facetedscatterplot,box_evalue=box_evalue,
iden_boxp=iden_boxp,run_table=run_table))
}
# --- Import and parameters --- #
path_to_hunter <-
"data/hittables_taubert/rnavirus/combined_virushunter.tsv"
path_to_gatherer <- "data/hittables_taubert/rnavirus/combined_virusgatherer-cap3.tsv"
sra_name <- "Taubert Data combined"
virustype <- "RNA viruses (Hunter)"
virustype_gatherer <- "RNA viruses (Gatherer)"
hunter_export_path <- "output/TaubertDatacombined/plots/rnavirus/Hunter"
gatherer_export_path <- "output/TaubertDatacombined/plots/rnavirus/Gatherer"
facet_column <- NULL
# sra_name <- "FlorianÂ´s Data"
# virustype <- "Large DNA viruses (Hunter)"
# virustype_gatherer <- "Large DNA viruses (Gatherer)"
# hunter_export_path <- "output/Florian/largedna/plots/Hunter"
# gatherer_export_path <- "output/Florian/largedna/plots/Gatherer"
if(path_to_hunter != ""){
vh_file <-
ImportVirusTable(path_to_hunter)
vh_results <- vhPipeline(vh_file,sra_name = sra_name,virustype = virustype,path = hunter_export_path,facet_column=facet_column)
}
if(path_to_gatherer != ""){
vg_file <-
ImportVirusTable(path_to_gatherer)
vg_results <- vgPipeline(vg_file,sra_name = sra_name,virustype = virustype_gatherer,path = gatherer_export_path,facet_column=facet_column)
}
library(gt)
library(Virusparies)
library(dplyr)
test <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Bunya/virushunter.tsv")
test2 <- ImportVirusTable("data/Florian_data/RNA/virushunter.tsv")
test <- head(test,5)
test2 <- head(test2,5)
test$run_id <- test2$run_id
View(test)
test[,c(16,1:15)]
test$run_id <- test2$run_id
vg_file <- test[,c(16,1:15)]
# Function to get example values
get_examples <- function(column) {
if (is.factor(column) || is.character(column)) {
return(paste0(head(column, 3), collapse = ", "))
} else if (is.numeric(column) || is.integer(column)) {
# Use scientific notation format if necessary
formatted <- formatC(head(column, 3), format = "e", digits = 2)
return(paste0(formatted, collapse = ", "))
} else {
return(paste0(head(column, 3), collapse = ", "))
}
}
# Create a data frame with column names, data types, and example values
column_info <- data.frame(
Column_Name = names(vg_file),
Data_Type = sapply(vg_file, function(col) {
class(col) %>%
gsub("character", "chr", .) %>%
gsub("numeric", "dbl", .) %>%
gsub("integer", "int", .) %>%
gsub("factor", "fct", .) %>%
gsub("Date", "date", .)
}),
Examples = sapply(vg_file, get_examples),
stringsAsFactors = FALSE
)
# Create the gt table
gt_table <- column_info %>%
gt() %>%
tab_header(
title = "Column Overview"
) %>%
cols_label(
Column_Name = "Column Name",
Data_Type = "Data Type",
Examples = "Example Values"
) %>%
fmt_markdown(
columns = c(Examples)
) %>%
cols_align(
align = "left",
columns = c(Column_Name, Data_Type, Examples)
) %>%
fmt_number(
columns = c(Examples),
decimals = 2
)
# Print the gt table
print(gt_table)
path <- "misc/vhg_structure/"
ExportVirusGt(gtable=gt_table,filename="vh_structure.docx",path = path)
library(gt)
library(Virusparies)
library(dplyr)
test <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Bunya/virusgatherer-cap3.tsv")
test2 <- ImportVirusTable("data/Florian_data/RNA/virusgatherer-cap3.tsv")
test <- head(test,5)
test2 <- head(test2,5)
test$run_id <- test2$run_id
vg_file <- test[,c(16,1:15)]
View(test)
library(gt)
library(Virusparies)
library(dplyr)
test <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Bunya/virusgatherer-cap3.tsv")
test2 <- ImportVirusTable("data/Florian_data/RNA/virusgatherer-cap3.tsv")
test <- head(test,5)
test2 <- head(test2,5)
test$run_id <- test2$run_id
vg_file <- test[,c(14,1:13)]
# Function to get example values
get_examples <- function(column) {
if (is.factor(column) || is.character(column)) {
return(paste0(head(column, 3), collapse = ", "))
} else if (is.numeric(column) || is.integer(column)) {
# Use scientific notation format if necessary
formatted <- formatC(head(column, 3), format = "e", digits = 2)
return(paste0(formatted, collapse = ", "))
} else {
return(paste0(head(column, 3), collapse = ", "))
}
}
# Create a data frame with column names, data types, and example values
column_info <- data.frame(
Column_Name = names(vg_file),
Data_Type = sapply(vg_file, function(col) {
class(col) %>%
gsub("character", "chr", .) %>%
gsub("numeric", "dbl", .) %>%
gsub("integer", "int", .) %>%
gsub("factor", "fct", .) %>%
gsub("Date", "date", .)
}),
Examples = sapply(vg_file, get_examples),
stringsAsFactors = FALSE
)
# Create the gt table
gt_table <- column_info %>%
gt() %>%
tab_header(
title = "Column Overview"
) %>%
cols_label(
Column_Name = "Column Name",
Data_Type = "Data Type",
Examples = "Example Values"
) %>%
fmt_markdown(
columns = c(Examples)
) %>%
cols_align(
align = "left",
columns = c(Column_Name, Data_Type, Examples)
) %>%
fmt_number(
columns = c(Examples),
decimals = 2
)
# Print the gt table
print(gt_table)
path <- "misc/vhg_structure/"
ExportVirusGt(gtable=gt_table,filename="vg_structure.docx",path = path)
View(test2)
View(test)
View(vh_file)
test <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Bunya/virushunter.tsv.tsv")
library(gt)
library(Virusparies)
library(dplyr)
test <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Bunya/virushunter.tsv.tsv")
library(gt)
library(Virusparies)
library(dplyr)
test <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Bunya/virushunter.tsv")
test2 <- ImportVirusTable("data/Florian_data/RNA/virushunter.tsv")
test <- head(test,5)
test2 <- head(test2,5)
test$run_id <- test2$run_id
dep <- read.csv("misc/Vhvg_dependencies/dependencies.csv")
head(dep)
library(Virusparies)
VhgTabularRasa(dep)
