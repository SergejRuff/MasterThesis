"Hong Kong flu","HIV/AIDS","SARS CoV","Swine flu","MERS","Ebola","Zika Virus","SARS CoV-2 (COVID19)","Mpox epidemic"),
start = paste0(c("1889","1918","1957","1968","1981","2002","2009","2012","2014","2015","2019","2023"), "-01-01"),
end = c("1890-12-31","1920-12-31","1958-12-31",NA,NA,"2004-12-31","2010-12-31",NA,"2016-12-31",NA,NA,NA)
)
pandem_time$year <- as.numeric(sub("^(\\d{1,4})-.*$", "\\1", pandem_time$start))
######### Generate plot
# Set the heights we will use for our milestones.
positions <- c(0.5, -0.5, 1.0, -1.0, 1.25, -1.25, 1.5, -1.5)
# Set the directions we will use for our milestone, for example above and below.
directions <- c(1, -1)
line_pos <- data.frame(
"start"=unique(pandem_time$start),
"position"=rep(positions, length.out=length(unique(pandem_time$start))),
"direction"=rep(directions, length.out=length(unique(pandem_time$start))))
pandem_time <- merge(x=pandem_time, y=line_pos, by="start", all = TRUE)
pandem_time$start <- as.Date(pandem_time$start, format = "%Y-%m-%d")
pandem_time$end <- as.Date(pandem_time$end, format = "%Y-%m-%d")
# Create a year dataframe with a sequence of years from 100 to 2030
year_df <- data.frame(
year_date_range = seq(1880, 2030, by = 20),  # Numeric years
year_format = as.character(seq(1880, 2030, by = 20))  # Year labels
)
pandem_time$start <- as.Date(pandem_time$start)
# Add a new column for colors based on the start year
pandem_time <- pandem_time %>%
mutate(color = case_when(
start < as.Date("1900-01-01") ~ "19th Century",  # Color for years before 1900
start >= as.Date("1900-01-01") & start < as.Date("2000-01-01") ~ "20th Century",  # Color for years between 1900 and 2000
start >= as.Date("2000-01-01") ~ "21st Century"     # Color for years after 2000
))
# Lets offset the labels 0.2 away from scatter points
text_offset <- 0.2
# Let's use the absolute value since we want to add the text_offset and increase space away from the scatter points
absolute_value<-(abs(pandem_time$position))
text_position<- absolute_value + text_offset
# Let's keep the direction above or below for the labels to match the scatter points
pandem_time$text_position<- text_position * pandem_time$direction
# Create the initial timeline plot with specified colors
timeline_plot <- ggplot(pandem_time, aes(x = as.numeric(format(start, "%Y")),position, label = content, color = color)) +
theme_classic() +
geom_hline(yintercept = 0, color = "black", size = 0.3) +
geom_segment(aes(yend = 0, xend = as.numeric(format(start, "%Y"))), size = 0.2) +
geom_point(size = 3) +
theme(axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
legend.position = "bottom") +
geom_text(data = pandem_time,
aes(x = as.numeric(format(start, "%Y")), y = text_position, label = paste0(content,"\n",year)),
size = 3.5,
color = 'black') +  # Adjust y position for text labels
labs(color = "Century") +  # Add title for the legend
guides(color = guide_legend(override.aes = list(size = 5)))  # Ensure legend shows larger points
# Create the legend data for custom color mapping
legend_data <- data.frame(
label = c("19th Century", "20th Century", "21st Century"),
color = c("darkorange", "deepskyblue", "seagreen")
)
# Update the pandem_time dataframe to map colors correctly
pandem_time$color <- factor(pandem_time$color, levels = legend_data$label)
# Update the timeline_plot to use scale_color_manual
timeline_plot <- timeline_plot +
scale_color_manual(values = setNames(legend_data$color, legend_data$label))
timeline_plot <- timeline_plot + geom_text(data=year_df, aes(x=year_date_range,y=-0.1,label=year_format),size=3.5, color='black')
timeline_plot <- timeline_plot + ggtitle("Major Viral Pandemics and Epidemics Since the Industrial Era")+
theme(plot.title = element_text(
hjust = 0.5,                  # Center-align the title
size = 16,                   # Font size
face = "bold",               # Bold font
color = "#4B4B4B",              # Title color changed to blue
family = "sans",             # Font family
margin = margin(b = 10)      # Bottom margin for spacing
))
# Print the plot
print(timeline_plot)
rm(list = ls())
"
this script is meant for the generation of timelines used in my
defense - see powerpoint prasentation
page:
"
## load libraries
library(timevis)
library(timelineS)
library(ggplot2)
library(ggrepel)
library(ggbreak)
library(viridis)
# generate data for plot
"
First Plot is suppose to show a timeline with all pandemics and epedemics
caused by viruses
source used for data:
https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8525686/ - Pandemics Throughout the History
https://www.ncbi.nlm.nih.gov/pmc/articles/PMC8483091/ - Viral Pandemics in the Past Two Decades: An Overview
"
pandem_time <- data.frame(
id = 1:12,
content = c("Russian flu","Spanish flu","Asian flu",
"Hong Kong flu","HIV/AIDS","SARS CoV","Swine flu","MERS","Ebola","Zika Virus","SARS CoV-2 (COVID19)","Mpox epidemic"),
start = paste0(c("1889","1918","1957","1968","1981","2002","2009","2012","2014","2015","2019","2023"), "-01-01"),
end = c("1890-12-31","1920-12-31","1958-12-31",NA,NA,"2004-12-31","2010-12-31",NA,"2016-12-31",NA,NA,NA)
)
pandem_time$year <- as.numeric(sub("^(\\d{1,4})-.*$", "\\1", pandem_time$start))
######### Generate plot
# Set the heights we will use for our milestones.
positions <- c(0.5, -0.5, 1.0, -1.0, 1.25, -1.25, 1.5, -1.5)
# Set the directions we will use for our milestone, for example above and below.
directions <- c(1, -1)
line_pos <- data.frame(
"start"=unique(pandem_time$start),
"position"=rep(positions, length.out=length(unique(pandem_time$start))),
"direction"=rep(directions, length.out=length(unique(pandem_time$start))))
pandem_time <- merge(x=pandem_time, y=line_pos, by="start", all = TRUE)
pandem_time$start <- as.Date(pandem_time$start, format = "%Y-%m-%d")
pandem_time$end <- as.Date(pandem_time$end, format = "%Y-%m-%d")
# Create a year dataframe with a sequence of years from 100 to 2030
year_df <- data.frame(
year_date_range = seq(1880, 2030, by = 20),  # Numeric years
year_format = as.character(seq(1880, 2030, by = 20))  # Year labels
)
pandem_time$start <- as.Date(pandem_time$start)
# Add a new column for colors based on the start year
pandem_time <- pandem_time %>%
mutate(color = case_when(
start < as.Date("1900-01-01") ~ "19th Century",  # Color for years before 1900
start >= as.Date("1900-01-01") & start < as.Date("2000-01-01") ~ "20th Century",  # Color for years between 1900 and 2000
start >= as.Date("2000-01-01") ~ "21st Century"     # Color for years after 2000
))
# Lets offset the labels 0.2 away from scatter points
text_offset <- 0.2
# Let's use the absolute value since we want to add the text_offset and increase space away from the scatter points
absolute_value<-(abs(pandem_time$position))
text_position<- absolute_value + text_offset
# Let's keep the direction above or below for the labels to match the scatter points
pandem_time$text_position<- text_position * pandem_time$direction
# Create the initial timeline plot with specified colors
timeline_plot <- ggplot(pandem_time, aes(x = as.numeric(format(start, "%Y")),position, label = content, color = color)) +
theme_classic() +
geom_hline(yintercept = 0, color = "black", size = 0.3) +
geom_segment(aes(yend = 0, xend = as.numeric(format(start, "%Y"))), size = 0.2) +
geom_point(size = 3) +
theme(axis.line.y = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.line.x = element_blank(),
legend.position = "bottom") +
geom_text(data = pandem_time,
aes(x = as.numeric(format(start, "%Y")), y = text_position, label = paste0(content,"\n",year)),
size = 3.5,
color = 'black') +  # Adjust y position for text labels
labs(color = "Century") +  # Add title for the legend
guides(color = guide_legend(override.aes = list(size = 5)))  # Ensure legend shows larger points
# Create the legend data for custom color mapping
legend_data <- data.frame(
label = c("19th Century", "20th Century", "21st Century"),
color = c("darkorange", "deepskyblue", "seagreen")
)
# Update the pandem_time dataframe to map colors correctly
pandem_time$color <- factor(pandem_time$color, levels = legend_data$label)
# Update the timeline_plot to use scale_color_manual
timeline_plot <- timeline_plot +
scale_color_manual(values = setNames(legend_data$color, legend_data$label))
timeline_plot <- timeline_plot + geom_text(data=year_df, aes(x=year_date_range,y=-0.1,label=year_format),size=3.5, color='black')
timeline_plot <- timeline_plot + ggtitle("Major Viral Pandemics and Epidemics Since the Industrial Era")+
theme(plot.title = element_text(
hjust = 0.5,                  # Center-align the title
size = 16,                   # Font size
face = "bold",               # Bold font
color = "#4B4B4B",              # Title color changed to blue
family = "Arial",             # Font family
margin = margin(b = 10)      # Bottom margin for spacing
))
# Print the plot
print(timeline_plot)
rm(list=ls())
library(Virusparies)
library(tidyverse)
top_csv <- read.delim("/media/sergej/EXTERNAL_US/git_clone/RscriptsMasterthesis/output/mammals/longest_con_gvtable.tsv")
top_csv <- top_csv %>%
rename(seq_id = contig_id)
top_csv <- top_csv %>%
filter(!(seq_id %in% c("SRR17345012_cap3_Contig-13", "SRR17345012_cap3_Contig-11","SRR17345013_cap3_Contig-21",
"SRR13364363_cap3_Contig-11","SRR13364364_cap3_Contig-12")))
subjects <- VhgGetSubject(top_csv,groupby = ViralRefSeq_taxonomy,extract_brackets = TRUE)
subjects <- subjects %>% select(-subject_count)
subjects  <- subjects  %>%
left_join(top_csv %>% select(SRA_run,Phylum,ViralRefSeq_ident,contig_len,ViralRefSeq_taxonomy,host_taxon), by = "ViralRefSeq_taxonomy")
subjects <- subjects %>%
select(SRA_run,Phylum,ViralRefSeq_taxonomy,Processed_ViralRefSeq_subject,host_taxon,contig_len,ViralRefSeq_ident)
subjects <- subjects[order(subjects$contig_len,decreasing = TRUE), ]
sub_table <- VhgTabularRasa(subjects,title = NULL,names_ = c("SRA experiment","Phylum","Viral reference taxonomy","viral subject","Host","contig length",
"Sequence Identity [%]"))
sub_table <- sub_table%>%
opt_align_table_header(align = "left") %>%
opt_stylize(style = 4) %>%  # Apply predefined styling
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3),
row_group.padding = px(4),
heading.title.font.size = px(20)
)
rm(list=ls())
library(Virusparies)
library(tidyverse)
library(gt)
top_csv <- read.delim("/media/sergej/EXTERNAL_US/git_clone/RscriptsMasterthesis/output/mammals/longest_con_gvtable.tsv")
top_csv <- top_csv %>%
rename(seq_id = contig_id)
top_csv <- top_csv %>%
filter(!(seq_id %in% c("SRR17345012_cap3_Contig-13", "SRR17345012_cap3_Contig-11","SRR17345013_cap3_Contig-21",
"SRR13364363_cap3_Contig-11","SRR13364364_cap3_Contig-12")))
subjects <- VhgGetSubject(top_csv,groupby = ViralRefSeq_taxonomy,extract_brackets = TRUE)
subjects <- subjects %>% select(-subject_count)
subjects  <- subjects  %>%
left_join(top_csv %>% select(SRA_run,Phylum,ViralRefSeq_ident,contig_len,ViralRefSeq_taxonomy,host_taxon), by = "ViralRefSeq_taxonomy")
subjects <- subjects %>%
select(SRA_run,Phylum,ViralRefSeq_taxonomy,Processed_ViralRefSeq_subject,host_taxon,contig_len,ViralRefSeq_ident)
subjects <- subjects[order(subjects$contig_len,decreasing = TRUE), ]
sub_table <- VhgTabularRasa(subjects,title = NULL,names_ = c("SRA experiment","Phylum","Viral reference taxonomy","viral subject","Host","contig length",
"Sequence Identity [%]"))
sub_table <- sub_table%>%
opt_align_table_header(align = "left") %>%
opt_stylize(style = 4) %>%  # Apply predefined styling
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3),
row_group.padding = px(4),
heading.title.font.size = px(20)
)
sub_table
sub_table
subjects
rm(list=ls())
library(Virusparies)
library(tidyverse)
library(gt)
top_csv <- read.delim("/media/sergej/EXTERNAL_US/git_clone/RscriptsMasterthesis/output/mammals/longest_con_gvtable.tsv")
top_csv <- top_csv %>%
rename(seq_id = contig_id)
top_csv <- top_csv %>%
filter(!(seq_id %in% c("SRR17345012_cap3_Contig-13", "SRR17345012_cap3_Contig-11","SRR17345013_cap3_Contig-21",
"SRR13364363_cap3_Contig-11","SRR13364364_cap3_Contig-12")))
subjects <- VhgGetSubject(top_csv,groupby = ViralRefSeq_taxonomy,extract_brackets = TRUE)
subjects <- subjects %>% select(-subject_count)
subjects  <- subjects  %>%
left_join(top_csv %>% select(SRA_run,Phylum,ViralRefSeq_ident,contig_len,ViralRefSeq_taxonomy,host_taxon), by = "ViralRefSeq_taxonomy")
subjects <- subjects %>%
select(SRA_run,Phylum,ViralRefSeq_taxonomy,Processed_ViralRefSeq_subject,host_taxon,contig_len,ViralRefSeq_ident)
subjects <- subjects[order(subjects$contig_len,decreasing = TRUE), ]
subjects$ViralRefSeq_ident <- round(subjects$ViralRefSeq_ident,2)
sub_table <- VhgTabularRasa(subjects,title = NULL,names_ = c("SRA experiment","Phylum","Viral reference taxonomy","viral subject","Host","contig length",
"Sequence Identity [%]"))
sub_table <- sub_table%>%
opt_align_table_header(align = "left") %>%
opt_stylize(style = 4) %>%  # Apply predefined styling
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3),
row_group.padding = px(4),
heading.title.font.size = px(20)
)
sub_table
ExportVirusGt(sub_table,filename = "sub_table.png",export_gt_obj = TRUE,path = "output/mammals/statistics",create.dir = TRUE)
rm(list=ls())
library(Virusparies)
library(ggplot2)
library(tidyverse)
library(gt)
m1 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Flavi/virusgatherer-cap3.tsv")
m2 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/hepevirga/virusgatherer-cap3.tsv")
m3 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Nido/virusgatherer-cap3.tsv")
m4 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Bunya/virusgatherer-cap3.tsv")
m5 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Mono_chu_08july_RNAvirus_nofil_1/virusgatherer-cap3.tsv")
m6 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/orthomyxo_20july_RNAvirus_nofil_1/virusgatherer-cap3.tsv")
m7 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/NidoAstro_RdRp/virusgatherer-cap3.tsv")
m8 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Nido_NiRAN/virusgatherer-cap3.tsv")
combined_ga <- CombineHittables(m1,m2,m3,m4,m5,m6,m7,m8)
# combined_ga <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/excel_with_alldata_unfiltered/RNAviruses-Mammals-RNA-newJan2023.tsv")
combined_ga <- VhgPreprocessTaxa(combined_ga,taxa_rank = "Family")
combined_ga <- VhgPreprocessTaxa(combined_ga,taxa_rank = "Family")
combined_ga <- VhgAddPhylum(combined_ga,"ViralRefSeq_taxonomy")
combined_ga <- VhgSubsetHittable(combined_ga,ViralRefSeq_E_criteria = 1e-5)
View(combined_ga)
combined_ga %>% filter(SRA_study=="SRP273560",ViralRefSeq_taxonomy=="Fiersviridae")
t <- combined_ga %>% filter(SRA_study=="SRP273560",ViralRefSeq_taxonomy=="Fiersviridae")
View(t)
View(combined_ga)
rm(list=ls())
library(Virusparies)
library(ggplot2)
library(tidyverse)
library(gt)
m1 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Flavi/virusgatherer-cap3.tsv")
m2 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/hepevirga/virusgatherer-cap3.tsv")
m3 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Nido/virusgatherer-cap3.tsv")
m4 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Bunya/virusgatherer-cap3.tsv")
m5 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Mono_chu_08july_RNAvirus_nofil_1/virusgatherer-cap3.tsv")
m6 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/orthomyxo_20july_RNAvirus_nofil_1/virusgatherer-cap3.tsv")
m7 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/NidoAstro_RdRp/virusgatherer-cap3.tsv")
m8 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Nido_NiRAN/virusgatherer-cap3.tsv")
combined_ga <- CombineHittables(m1,m2,m3,m4,m5,m6,m7,m8)
combined_ga <- VhgPreprocessTaxa(combined_ga,taxa_rank = "Family")
VhgRunsBarplot(combined_ga,groupby = "ViralRefSeq_taxonomy",theme_choice = "linedraw_dotted",
plot_text = 1,title = NULL,group_unwanted_phyla = "rna",reorder_criteria = "phylum_max",xlabel = "RNA viruses")
VhgRunsBarplot(combined_ga,groupby = "ViralRefSeq_taxonomy",theme_choice = "linedraw_dotted",
plot_text = 1,title = NULL,group_unwanted_phyla = "rna",reorder_criteria = "phylum_max",xlabel = "RNA viruses",legend_position = "right")
VhgBoxplot(combined_ga,x_column = "ViralRefSeq_taxonomy",y_column = "ViralRefSeq_E",
theme_choice = "linedraw_dotted",legend_position = "right",
title = NULL,group_unwanted_phyla = "rna",reorder_criteria = "phylum_median",xlabel = "RNA viruses")
VhgBoxplot(combined_ga,x_column = "ViralRefSeq_taxonomy",y_column = "ViralRefSeq_ident",
theme_choice = "linedraw_dotted",group_unwanted_phyla = "rna",reorder_criteria = "phylum_median",title = NULL,xlabel = "RNA viruses")
VhgBoxplot(combined_ga,x_column = "ViralRefSeq_taxonomy",y_column = "ViralRefSeq_ident",
theme_choice = "linedraw_dotted",group_unwanted_phyla = "rna",reorder_criteria = "phylum_median",title = NULL,xlabel = "RNA viruses",legend_position = "right")
VhgBoxplot(combined_ga,x_column = "ViralRefSeq_taxonomy",y_column = "contig_len",contiglen_log10_scale = TRUE,
theme_choice = "linedraw_dotted",group_unwanted_phyla = "rna",reorder_criteria = "phylum_median",title = NULL,xlabel = "RNA viruses")
VhgBoxplot(combined_ga,x_column = "ViralRefSeq_taxonomy",y_column = "contig_len",contiglen_log10_scale = TRUE,
theme_choice = "linedraw_dotted",group_unwanted_phyla = "rna",reorder_criteria = "phylum_median",title = NULL,xlabel = "RNA viruses",legend_position = "right")
# title = "Mammal sequence data (Gatherer)\nDistribution of viral groups detected across query sequences"
sra <- VhgRunsBarplot(combined_ga,groupby = "ViralRefSeq_taxonomy",theme_choice = "linedraw_dotted",
plot_text = 1,title = NULL,group_unwanted_phyla = "rna",reorder_criteria = "phylum_max",xlabel = "RNA viruses",legend_position = "right")
# title = "Mammal sequence data (Gatherer)\nBoxplot of viral reference E-values for each group"
boxplot_ <- VhgBoxplot(combined_ga,x_column = "ViralRefSeq_taxonomy",y_column = "ViralRefSeq_E",
theme_choice = "linedraw_dotted",legend_position = "right",
title = NULL,group_unwanted_phyla = "rna",reorder_criteria = "phylum_median",xlabel = "RNA viruses")
boxplot_iden <- VhgBoxplot(combined_ga,x_column = "ViralRefSeq_taxonomy",y_column = "ViralRefSeq_ident",
theme_choice = "linedraw_dotted",group_unwanted_phyla = "rna",reorder_criteria = "phylum_median",title = NULL,xlabel = "RNA viruses",legend_position = "right")
boxplot_con <-VhgBoxplot(combined_ga,x_column = "ViralRefSeq_taxonomy",y_column = "contig_len",contiglen_log10_scale = TRUE,
theme_choice = "linedraw_dotted",group_unwanted_phyla = "rna",reorder_criteria = "phylum_median",title = NULL,xlabel = "RNA viruses",legend_position = "right")
ExportVirusPlot(plot = boxplot_$boxp,"combined_boxplot.png",path = "output/mammals/",
units = "in",limitsize = FALSE,width = 10,height = 13)
ExportVirusPlot(plot = sra$plot,"combined_sra.png",path = "output/mammals/",
units = "in",limitsize = FALSE,width = 10,height = 13)
ExportVirusPlot(plot = boxplot_iden$boxp,"combined_boxplot_iden.png",path = "output/mammals/",
units = "in",limitsize = FALSE,width = 10,height = 13)
ExportVirusPlot(plot = boxplot_con$boxp,"combined_boxplot_con.png",path = "output/mammals/",
units = "in",limitsize = FALSE,width = 10,height = 13)
rm(list=ls())
library(Virusparies)
library(gt)
mammalian_dis <- data.frame(
Host = c("Bos taurus (Cattle)", "Sus scrofa domesticus ()", "Chlorocebus sabaeus",
"Sus scrofa", "Otomops harrisoni"),
Num_of_contigs = c(2401, 1073, 1059, 317, 186),
Percentage = c(38.67, 17.28, 17.06, 5.11, 3.00)
)
rm(list=ls())
library(Virusparies)
library(gt)
mammalian_dis <- data.frame(
Host = c("Bos taurus (Cattle)", "Sus scrofa domesticus (Domestic Pig)", "Chlorocebus sabaeus (green monkey)",
"Sus scrofa (Wild Boar)", "Otomops harrisoni (Harrison's large-eared giant mastiff bat)"),
Num_of_contigs = c(2401, 1073, 1059, 317, 186),
Percentage = c(38.67, 17.28, 17.06, 5.11, 3.00)
)
VhgTabularRasa(mammalian_dis,title = NULL)
VhgTabularRasa(mammalian_dis,title = NULL,names_ = c("Host","Number of contigs","Percentage"))
mammal_gt <- VhgTabularRasa(mammalian_dis,title = NULL,names_ = c("Host","Number of contigs","Percentage"))
mammal_gt %>%
opt_align_table_header(align = "left") %>%
opt_stylize(style = 4) %>%  # Apply predefined styling
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3),
row_group.padding = px(4),
heading.title.font.size = px(20)
)
2401/6209
mammal_gt %>%
opt_align_table_header(align = "left") %>%
opt_stylize(style = 4) %>%  # Apply predefined styling
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3),
row_group.padding = px(4),
heading.title.font.size = px(20)
)%>%
tab_footnote(
footnote = "Percentage relative to the total number of contigs (6209)",
locations = cells_title("title")  # Change this location if needed
)
mammal_gt %>%
opt_align_table_header(align = "left") %>%
opt_stylize(style = 4) %>%  # Apply predefined styling
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3),
row_group.padding = px(4),
heading.title.font.size = px(20)
)
mammal_gt %>%
opt_align_table_header(align = "left") %>%
opt_stylize(style = 4) %>%  # Apply predefined styling
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3),
row_group.padding = px(4),
heading.title.font.size = px(20)
)%>%
tab_footnote(
footnote = "Percentage relative to the total number of contigs (6209)",
locations = cells_title("title")  # Change this location if needed
)
mammal_gt %>%
opt_align_table_header(align = "left") %>%
opt_stylize(style = 4) %>%  # Apply predefined styling
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3),
row_group.padding = px(4),
heading.title.font.size = px(20)
)%>%
tab_footnote(
footnote = "Percentage relative to the total number of contigs (6209)"
)
mammal_gt %>%
opt_align_table_header(align = "left") %>%
opt_stylize(style = 4) %>%  # Apply predefined styling
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3),
row_group.padding = px(4),
heading.title.font.size = px(20)
)%>%
# Rename the third column by adding an asterisk
cols_label(
Column3 = "Percentage*"
)  %>%
# Add footnote for total number of contigs
tab_footnote(
footnote = "*Percentage relative to the total number of contigs (6209)",
)
mammal_gt %>%
opt_align_table_header(align = "left") %>%
opt_stylize(style = 4) %>%  # Apply predefined styling
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3),
row_group.padding = px(4),
heading.title.font.size = px(20)
)%>%
# Rename the third column by adding an asterisk
cols_label(
Percentage = "Percentage*"
)  %>%
# Add footnote for total number of contigs
tab_footnote(
footnote = "*Percentage relative to the total number of contigs (6209)",
)
rm(list=ls())
library(Virusparies)
library(gt)
mammalian_dis <- data.frame(
Host = c("Bos taurus (Cattle)", "Sus scrofa domesticus (Domestic Pig)", "Chlorocebus sabaeus (green monkey)",
"Sus scrofa (Wild Boar)", "Otomops harrisoni (Harrison's large-eared giant mastiff bat)"),
Num_of_contigs = c(2401, 1073, 1059, 317, 186),
Percentage = c(38.67, 17.28, 17.06, 5.11, 3.00)
)
mammal_gt <- VhgTabularRasa(mammalian_dis,title = NULL,names_ = c("Host","Number of contigs","Percentage"))
mammal_gt <- mammal_gt %>%
opt_align_table_header(align = "left") %>%
opt_stylize(style = 4) %>%
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3),
row_group.padding = px(4),
heading.title.font.size = px(20)
)%>%
# Rename the third column by adding an asterisk
cols_label(
Percentage = "Percentage*"
)  %>%
tab_footnote(
footnote = "*Percentage relative to the total number of contigs (6209).",
)
ExportVirusGt(mammal_gt,filename = "mammal_distro.png",export_gt_obj = TRUE,path = "output/mammals/statistics",create.dir = TRUE)
rm(list=ls())
library(Virusparies)
library(gt)
mammalian_dis <- data.frame(
Host = c("Bos taurus (Cattle)", "Sus scrofa domesticus (Domestic Pig)", "Chlorocebus sabaeus (Green monkey)",
"Sus scrofa (Wild Boar)", "Otomops harrisoni (Harrison's large-eared giant mastiff bat)"),
Num_of_contigs = c(2401, 1073, 1059, 317, 186),
Percentage = c(38.67, 17.28, 17.06, 5.11, 3.00)
)
mammal_gt <- VhgTabularRasa(mammalian_dis,title = NULL,names_ = c("Host","Number of contigs","Percentage"))
mammal_gt <- mammal_gt %>%
opt_align_table_header(align = "left") %>%
opt_stylize(style = 4) %>%
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3),
row_group.padding = px(4),
heading.title.font.size = px(20)
)%>%
# Rename the third column by adding an asterisk
cols_label(
Percentage = "Percentage*"
)  %>%
tab_footnote(
footnote = "*Percentage relative to the total number of contigs (6209).",
)
ExportVirusGt(mammal_gt,filename = "mammal_distro.png",export_gt_obj = TRUE,path = "output/mammals/statistics",create.dir = TRUE)
