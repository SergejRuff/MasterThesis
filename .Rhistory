remove.packages("Virusparies") # remove old version before installing new
library(remotes)
remotes::install_github("SergejRuff/Virusparies")
rm(list = ls())
library(Virusparies)
?`Virusparies-package`
rm(list=ls())
library(Virusparies)
library(ggplot2)
library(tidyverse)
library(gt)
m1 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Flavi/virusgatherer-cap3.tsv")
m2 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/hepevirga/virusgatherer-cap3.tsv")
m3 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Nido/virusgatherer-cap3.tsv")
m4 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Bunya/virusgatherer-cap3.tsv")
m5 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Mono_chu_08july_RNAvirus_nofil_1/virusgatherer-cap3.tsv")
m6 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/orthomyxo_20july_RNAvirus_nofil_1/virusgatherer-cap3.tsv")
m7 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/NidoAstro_RdRp/virusgatherer-cap3.tsv")
m8 <- ImportVirusTable("data/RNAvirus_Mammals_newJan2023/mammals/Nido_NiRAN/virusgatherer-cap3.tsv")
combined_ga <- CombineHittables(m1,m2,m3,m4,m5,m6,m7,m8)
combined_ga <- VhgPreprocessTaxa(combined_ga,taxa_rank = "Family")
VhgRunsBarplot(combined_ga,groupby = "ViralRefSeq_taxonomy",theme_choice = "linedraw_dotted",
plot_text = 1,title = NULL,group_unwanted_phyla = "rna",reorder_criteria = "phylum_max",xlabel = "RNA viruses")
sra <- VhgRunsBarplot(combined_ga,groupby = "ViralRefSeq_taxonomy",theme_choice = "linedraw_dotted",
plot_text = 1,title = NULL,group_unwanted_phyla = "rna",reorder_criteria = "phylum_max",xlabel = "RNA viruses")
VhgBoxplot(combined_ga,x_column = "ViralRefSeq_taxonomy",y_column = "ViralRefSeq_E",
theme_choice = "linedraw_dotted",legend_position = "right",
title = NULL,group_unwanted_phyla = "rna",reorder_criteria = "phylum_median",xlabel = "RNA viruses")
boxplot_ <- VhgBoxplot(combined_ga,x_column = "ViralRefSeq_taxonomy",y_column = "ViralRefSeq_E",
theme_choice = "linedraw_dotted",legend_position = "right",
title = NULL,group_unwanted_phyla = "rna",reorder_criteria = "phylum_median",xlabel = "RNA viruses")
VhgBoxplot(combined_ga,x_column = "ViralRefSeq_taxonomy",y_column = "ViralRefSeq_ident",
theme_choice = "linedraw_dotted",group_unwanted_phyla = "rna",reorder_criteria = "phylum_median",title = NULL,xlabel = "RNA viruses")
boxplot_iden <- VhgBoxplot(combined_ga,x_column = "ViralRefSeq_taxonomy",y_column = "ViralRefSeq_ident",
theme_choice = "linedraw_dotted",group_unwanted_phyla = "rna",reorder_criteria = "phylum_median",title = NULL,xlabel = "RNA viruses")
VhgBoxplot(combined_ga,x_column = "ViralRefSeq_taxonomy",y_column = "contig_len",contiglen_log10_scale = TRUE,
theme_choice = "linedraw_dotted",group_unwanted_phyla = "rna",reorder_criteria = "phylum_median",title = NULL,xlabel = "RNA viruses")
boxplot_con <-VhgBoxplot(combined_ga,x_column = "ViralRefSeq_taxonomy",y_column = "contig_len",contiglen_log10_scale = TRUE,
theme_choice = "linedraw_dotted",group_unwanted_phyla = "rna",reorder_criteria = "phylum_median",title = NULL,xlabel = "RNA viruses")
ExportVirusPlot(plot = boxplot_$boxp,"combined_boxplot.png",path = "output/mammals/",
units = "in",limitsize = FALSE,width = 10,height = 13)
ExportVirusPlot(plot = sra$plot,"combined_sra.png",path = "output/mammals/",
units = "in",limitsize = FALSE,width = 10,height = 13)
ExportVirusPlot(plot = boxplot_iden$boxp,"combined_boxplot_iden.png",path = "output/mammals/",
units = "in",limitsize = FALSE,width = 10,height = 13)
ExportVirusPlot(plot = boxplot_con$boxp,"combined_boxplot_con.png",path = "output/mammals/",
units = "in",limitsize = FALSE,width = 10,height = 13)
VhgGetSubject(combined_ga,groupby = "ViralRefSeq_taxonomy",extract_brackets = TRUE,group_unwanted_phyla = "rna")
subject <- VhgGetSubject(combined_ga,groupby = "ViralRefSeq_taxonomy",extract_brackets = TRUE,group_unwanted_phyla = "rna")
ExportVirusDataFrame(subject,file_name = "subject_mammal.csv",dir_path = "output/mammals")
SummarizeViralStats(combined_ga,groupby = "ViralRefSeq_taxonomy",
metric = "ViralRefSeq_ident",metric_cutoff = 90,filter_cutoff = 1e-5,
show_total = TRUE,extra_stats = c("median","Q1","Q3"),group_unwanted_phyla = "rna",sort_by = "total")
stats <- SummarizeViralStats(combined_ga,groupby = "ViralRefSeq_taxonomy",
metric = "ViralRefSeq_ident",metric_cutoff = 90,filter_cutoff = 1e-5,
show_total = TRUE,extra_stats = c("median","Q1","Q3"),group_unwanted_phyla = "rna",sort_by = "total")
ExportVirusDataFrame(stats,file_name = "identity_mammal.csv",dir_path = "output/mammals")
ExportVirusDataFrame(combined_ga,file_name = "combined_ga.tsv",dir_path = "data/RNAvirus_Mammals_newJan2023/mammals")
virus_list <- sra[["sample_run"]]$cyl[1]
virus_list <- strsplit(virus_list, ",\\s*")[[1]]
# Calculate the number of rows and columns for the 5x5 table
n_rows <- 5
n_cols <- ceiling(length(virus_list) / n_rows)
# Create a matrix for the table with NA for missing values
matrix_data <- matrix(NA, nrow = n_rows, ncol = n_cols)
matrix_data[1:length(virus_list)] <- virus_list
# Convert matrix to dataframe
df <- as.data.frame(matrix_data, stringsAsFactors = FALSE)
# Create a gt table
gt_table <- df %>%
gt() %>%
tab_header(
title = "Non-RNA-viruses found in Mammal data"
) %>%
cols_label(
V1 = "Family 1-5",
V2 = "Family 6-10"
) %>%
fmt_markdown(
columns = everything()
)%>%
opt_align_table_header(align = "left") %>%
tab_options(
# These were the ones we applied in the first chapter
data_row.padding = px(2),
summary_row.padding = px(3), # A bit more padding for summaries
row_group.padding = px(4)    # And even more for our groups
) %>% opt_stylize(style = 4) %>%
tab_options(
heading.title.font.size = px(20)
)
# Print the gt table
print(gt_table)
# Create a matrix for the table with NA for missing values
matrix_data <- matrix(NA, nrow = n_rows, ncol = n_cols)
matrix_data[1:length(virus_list)] <- virus_list
# Convert matrix to dataframe
df <- as.data.frame(matrix_data, stringsAsFactors = FALSE)
# Create a gt table
gt_table <- df %>%
gt() %>%
tab_header(
title = "Non-RNA-viruses found in Mammal data"
) %>%
cols_label(
V1 = "Family 1-6",
V2 = "Family 7-12"
) %>%
fmt_markdown(
columns = everything()
)%>%
opt_align_table_header(align = "left") %>%
tab_options(
# These were the ones we applied in the first chapter
data_row.padding = px(2),
summary_row.padding = px(3), # A bit more padding for summaries
row_group.padding = px(4)    # And even more for our groups
) %>% opt_stylize(style = 4) %>%
tab_options(
heading.title.font.size = px(20)
)
# Print the gt table
print(gt_table)
virus_list <- sra[["sample_run"]]$cyl[1]
virus_list <- strsplit(virus_list, ",\\s*")[[1]]
# Calculate the number of rows and columns for the 5x5 table
n_rows <- 6
n_cols <- ceiling(length(virus_list) / n_rows)
# Create a matrix for the table with NA for missing values
matrix_data <- matrix(NA, nrow = n_rows, ncol = n_cols)
matrix_data[1:length(virus_list)] <- virus_list
# Convert matrix to dataframe
df <- as.data.frame(matrix_data, stringsAsFactors = FALSE)
# Create a gt table
gt_table <- df %>%
gt() %>%
tab_header(
title = "Non-RNA-viruses found in Mammal data"
) %>%
cols_label(
V1 = "Family 1-6",
V2 = "Family 7-12"
) %>%
fmt_markdown(
columns = everything()
)%>%
opt_align_table_header(align = "left") %>%
tab_options(
# These were the ones we applied in the first chapter
data_row.padding = px(2),
summary_row.padding = px(3), # A bit more padding for summaries
row_group.padding = px(4)    # And even more for our groups
) %>% opt_stylize(style = 4) %>%
tab_options(
heading.title.font.size = px(20)
)
# Print the gt table
print(gt_table)
library(gt)
virus_list <- sra[["sample_run"]]$cyl[1]
virus_list <- strsplit(virus_list, ",\\s*")[[1]]
# Calculate the number of rows and columns for the 6xN table
n_rows <- 6
n_cols <- ceiling(length(virus_list) / n_rows)
# Create a matrix for the table with NA for missing values
matrix_data <- matrix(NA, nrow = n_rows, ncol = n_cols)
matrix_data[1:length(virus_list)] <- virus_list
# Convert matrix to dataframe
df <- as.data.frame(matrix_data, stringsAsFactors = FALSE)
# Create a gt table
gt_table <- df %>%
gt() %>%
tab_header(
title = "Non-RNA-viruses found in Mammal data"
) %>%
cols_label(
V1 = "Family 1-6",
V2 = "Family 7-12"
) %>%
fmt_markdown(
columns = everything()
) %>%
fmt_missing(
columns = everything(),
missing_text = "Not Available"  # Replace NA with a specific text
) %>%
opt_align_table_header(align = "left") %>%
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3),
row_group.padding = px(4)
) %>%
opt_stylize(style = 4) %>%
tab_options(
heading.title.font.size = px(20)
)
# Print the gt table
print(gt_table)
library(gt)
virus_list <- sra[["sample_run"]]$cyl[1]
virus_list <- strsplit(virus_list, ",\\s*")[[1]]
# Calculate the number of rows and columns for the 6xN table
n_rows <- 6
n_cols <- ceiling(length(virus_list) / n_rows)
# Create a matrix for the table with NA for missing values
matrix_data <- matrix(NA, nrow = n_rows, ncol = n_cols)
matrix_data[1:length(virus_list)] <- virus_list
# Convert matrix to dataframe
df <- as.data.frame(matrix_data, stringsAsFactors = FALSE)
# Create a gt table
gt_table <- df %>%
gt() %>%
tab_header(
title = "Non-RNA-viruses found in Mammal data"
) %>%
cols_label(
V1 = "Family 1-6",
V2 = "Family 7-12"
) %>%
fmt_markdown(
columns = everything()
) %>%
fmt_missing(
columns = everything(),
missing_text = "â€”"  # Use a dash or another symbol to indicate missing data
) %>%
tab_spanner(
label = "Virus Families",
columns = everything()
) %>%
opt_align_table_header(align = "left") %>%
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3),
row_group.padding = px(4)
) %>%
opt_stylize(style = 4) %>%
tab_options(
heading.title.font.size = px(20)
) %>%
# Add a footnote to indicate the total number of viruses
tab_footnote(
footnote = "Only 11 viruses are available.",
locations = cells_title(groups = "title")
)
# Print the gt table
print(gt_table)
library(gt)
virus_list <- sra[["sample_run"]]$cyl[1]
virus_list <- strsplit(virus_list, ",\\s*")[[1]]
# Calculate the number of rows and columns for the 6xN table
n_rows <- 6
n_cols <- ceiling(length(virus_list) / n_rows)
# Create a matrix for the table with NA for missing values
matrix_data <- matrix(NA, nrow = n_rows, ncol = n_cols)
matrix_data[1:length(virus_list)] <- virus_list
# Convert matrix to dataframe
df <- as.data.frame(matrix_data, stringsAsFactors = FALSE)
# Create a gt table
gt_table <- df %>%
gt() %>%
tab_header(
title = "Non-RNA-viruses found in Mammal data"
) %>%
cols_label(
V1 = "Family 1-6",
V2 = "Family 7-12"
) %>%
fmt_markdown(
columns = everything()
) %>%
fmt_missing(
columns = everything(),
missing_text = "â€”"  # Use a dash or another symbol to indicate missing data
) %>%
tab_spanner(
label = "Virus Families",
columns = everything()
) %>%
opt_align_table_header(align = "left") %>%
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3),
row_group.padding = px(4)
) %>%
opt_stylize(style = 4) %>%
tab_options(
heading.title.font.size = px(20)
)
# Print the gt table
print(gt_table)
virus_list <- sra[["sample_run"]]$cyl[1]
virus_list <- strsplit(virus_list, ",\\s*")[[1]]
# Calculate the number of rows and columns for the 6xN table
n_rows <- 6
n_cols <- ceiling(length(virus_list) / n_rows)
# Create a matrix for the table with NA for missing values
matrix_data <- matrix(NA, nrow = n_rows, ncol = n_cols)
matrix_data[1:length(virus_list)] <- virus_list
# Convert matrix to dataframe
df <- as.data.frame(matrix_data, stringsAsFactors = FALSE)
# Create a gt table
gt_table <- df %>%
gt() %>%
tab_header(
title = "Non-RNA-viruses found in Mammal data"
) %>%
cols_label(
V1 = "Family 1-6",
V2 = "Family 7-11"
) %>%
fmt_markdown(
columns = everything()
) %>%
fmt_missing(
columns = everything(),
missing_text = "â€”"  # Use a dash or another symbol to indicate missing data
) %>%
tab_spanner(
label = "Virus Families",
columns = everything()
) %>%
opt_align_table_header(align = "left") %>%
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3),
row_group.padding = px(4)
) %>%
opt_stylize(style = 4) %>%
tab_options(
heading.title.font.size = px(20)
)
# Print the gt table
print(gt_table)
gtsave(gt_table,"non-rna-viruses-in-mammal.png",path = "output/mammals")
# Your tibble data (assuming it's named 'data')
filtered_data <- stats %>%
filter(!ViralRefSeq_taxonomy %in% c("unclassified", "Non-RNA-virus")) %>%
filter(ViralRefSeq_taxonomy != "Total") %>%
arrange(desc(total)) %>%
slice_head(n = 10)
ident_gt <- VhgTabularRasa(filtered_data,title = "Top 10 Viral Families by Sequence Identity",
names_ = c("Viral taxonomy","Identity < 90%", "Identity â‰¥ 90%","Total","Median","Q1","Q3"),title_colour = "black")
ident_gt <- ident_gt %>%
fmt_number(
columns = c("Median", "Q1", "Q3"),
decimals = 2
) %>%
opt_align_table_header(align = "left") %>%
opt_stylize(style = 4) %>%  # Apply predefined styling
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3),
row_group.padding = px(4),
heading.title.font.size = px(20)
)
ident_gt
gtsave(ident_gt,filename = "top10_iden_mammal.png",path = "output/mammals/")
# Your tibble data (assuming it's named 'data')
filtered_data <- stats %>%
filter(!ViralRefSeq_taxonomy %in% c("unclassified", "Non-RNA-viruses")) %>%
filter(ViralRefSeq_taxonomy != "Total") %>%
arrange(desc(total)) %>%
slice_head(n = 10)
ident_gt <- VhgTabularRasa(filtered_data,title = "Top 10 Viral Families by Sequence Identity",
names_ = c("Viral taxonomy","Identity < 90%", "Identity â‰¥ 90%","Total","Median","Q1","Q3"),title_colour = "black")
ident_gt <- ident_gt %>%
fmt_number(
columns = c("Median", "Q1", "Q3"),
decimals = 2
) %>%
opt_align_table_header(align = "left") %>%
opt_stylize(style = 4) %>%  # Apply predefined styling
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3),
row_group.padding = px(4),
heading.title.font.size = px(20)
)
ident_gt
gtsave(ident_gt,filename = "top10_iden_mammal.png",path = "output/mammals/")
gsa_subset <- VhgSubsetHittable(combined_ga,group_column = "ViralRefSeq_taxonomy",
virus_groups = c("Arteriviridae", "Picobirnaviridae","Fiersviridae",
"Flaviviridae","Astroviridae","Tombusviridae","Steitzviridae",
"Partitiviridae","Picornaviridae","unclassified Pisuviricota"))
t <- VhgGetSubject(gsa_subset,groupby = "ViralRefSeq_taxonomy",extract_brackets = TRUE)
# Assuming 't' is your data frame
grouped_data <- t %>%
group_by(ViralRefSeq_taxonomy, Processed_ViralRefSeq_subject) %>%
summarise(subject_count = sum(subject_count), .groups = 'drop') %>%
arrange(desc(subject_count))
# Print the result
print(grouped_data)
grouped_data <- grouped_data%>%
slice_head(n = 10)
viral_co<- VhgTabularRasa(grouped_data,title = "Top 10 Viral Subjects",
names_ = c("Viral taxonomy","Viral subjects","subject count"),title_colour = "black")
viral_co <- viral_co%>%
opt_align_table_header(align = "left") %>%
opt_stylize(style = 4) %>%  # Apply predefined styling
tab_options(
data_row.padding = px(2),
summary_row.padding = px(3),
row_group.padding = px(4),
heading.title.font.size = px(20)
)
viral_co
gtsave(viral_co,filename = "viral_co_mammal.png",path = "output/mammals/")
VhgRunsBarplot(combined_ga,groupby = "ViralRefSeq_taxonomy",theme_choice = "linedraw_dotted",
plot_text = 1,title = NULL,group_unwanted_phyla = "smalldna",reorder_criteria = "phylum_max",xlabel = "Small DNA viruses")
VhgRunsBarplot(combined_ga,groupby = "ViralRefSeq_taxonomy",theme_choice = "linedraw_dotted",
plot_text = 1,title = NULL,group_unwanted_phyla = "largedna",reorder_criteria = "phylum_max",xlabel = "Small DNA viruses")
VhgRunsBarplot(combined_ga,groupby = "ViralRefSeq_taxonomy",theme_choice = "linedraw_dotted",
plot_text = 1,title = NULL,group_unwanted_phyla = "rna",reorder_criteria = "phylum_max",xlabel = "RNA viruses")
